version: '3'
services:
  nginx:
    build:
      context: ./docker/nginx
    ports:
      - "80:80"
      - "443:443"
    links:
      - web
      - redoc

  db:
    build:
      context: ./docker/db
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pg_password
    volumes:
      # A persistent volume so that the database can be restored after a
      # docker-compose stop.
      # Note that it will be lost after a docker-compose down.
      - /var/lib/postgresql/data
      - ./logs:/var/log/postgres
    ports:
      # For debugging, sometimes it is useful to open the database port
      - "5432:5432"

  rabbitmq:
    build:
      context: ./docker/rabbitmq
    ports:
      # For debugging and local test it is useful to open the rabbitmq port
      - "5672:5672"
      # Optional: exposing the 15672; the rabbitmq web management interface
      - "15672:15672"

  web:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    #entrypoint: flask run --host 0.0.0.0 --port 5000 --no-reload
    #/entrypoint-server.sh
    environment:
      FLASK_ENV: development
      DB_USERNAME: db_user
      DB_PASSWORD: db_password
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: quetzal
      USE_GUNICORN: 1
      QUETZAL_BACKGROUND_JOBS: 1
      # KOMBU_LOG_CONNECTION: 1  # Useful to debug kombu bug
    volumes:
      # Setup a volume for development: it allows the web container to have the
      # latest changes so one does not need to build everytime there is a
      # modification.
      - .:/code
      # The secret files in the configuration are set as a volume, but don't use
      # it like this on production, use a secret!
      - ./conf:/code/conf:ro
    depends_on:
      - db
      - rabbitmq
    ports:
      # TODO: remove when the nginx service is added
      - "5000:5000"
    # Maybe needed to attach with docker-compose run --service-ports web command
    # stdin_open: true
    # tty: true

  worker:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    entrypoint: /entrypoint-worker.sh
    environment:
      FLASK_ENV: development
      DB_USERNAME: db_user
      DB_PASSWORD: db_password
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: quetzal
      QUETZAL_BACKGROUND_JOBS: 1
    volumes:
      # Setup a volume for development: it allows the web container to have the
      # latest changes so one does not need to build everytime there is a
      # modification.
      - .:/code
      # The secret files in the configuration are set as a volume, but don't use
      # it like this on production, use a secret!
      - ./conf:/code/conf:ro
    depends_on:
      - db
      - rabbitmq

  redoc:
    image: redocly/redoc
    environment:
      PAGE_TITLE: 'Quetzalcoatl API documentation'
      # PAGE_FAVICON: ...
      SPEC_URL: openapi.yaml
      PORT: 8000
    volumes:
      - ./openapi.yaml:/usr/share/nginx/html/openapi.yaml:ro

  unittests:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    #entrypoint: pytest -q
    entrypoint: /bin/true
    environment:
      FLASK_ENV: tests
      DB_USERNAME: db_user
      DB_PASSWORD: db_password
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: unittests
    volumes:
      # Setup a volume for development: it allows the web container to have the
      # latest changes so one does not need to build everytime there is a
      # modification.
      - .:/code
      # The secret files in the configuration are set as a volume, but don't use
      # it like this on production, use a secret!
      - ./conf:/code/conf:ro
    depends_on:
      - db
      - rabbitmq

