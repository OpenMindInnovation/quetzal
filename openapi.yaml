---
openapi: 3.0.2
info:
  title: quetzal
  description: Quetzalcoatl API (formerly known as CloudTS)
  version: 1.0.0
paths:
  /api/data/workspaces/:
    get:
      summary: Get all workspaces
      operationId: app.api.data.workspace.fetch
      parameters:
      - name: name
        in: query
        description: Filter workspaces by name
        required: false
        schema:
          type: string
      - name: owner
        in: query
        description: Filter workspaces by owner
        required: false
        schema:
          type: string
      - name: deleted
        in: query
        description: Include deleted workspaces
        schema:
          type: boolean
      responses:
        200:
          description: Workspace list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workspace'
    post:
      operationId: app.api.data.workspace.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewWorkspace'
        required: true
      responses:
        201:
          description: Workspace created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
components:
  schemas:
    NewWorkspace:
      title: Workspace creation input type
      description: Input data type to create a workspace
      required:
      - families
      - name
      - description
      type: object
      properties:
        name:
          type: string
        families:
          description: "Metadata requested for this workspace. The metadata request\
            \ is represented by\nan object (i.e. a dictionary). The object keys are\
            \ metadata family names; their\nvalues are the version number of the family.\
            \ When the version is null, it is \nequivalent to requesting the latest\
            \ version available."
          type: object
        description:
          description: Descriptive text of the purpose of this workspace
          type: string
        temporary:
          type: boolean
      example: |-
        {
            "name": "my_workspace",
            "families": {
                "base": null,
                "application": 123
            },
            "temporary": false
        }
    Workspace:
      title: Workspace details type
      description: Workspace details
      type: object
      properties:
        id:
          description: Workspace ID
          type: integer
        status:
          description: Workspace status
          enum:
          - initializing
          - ready
          - processing
          - invalid
          - conflict
          - deleted
        description:
          description: Descriptive text of the purpose of this workspace
          type: string
        families:
          description: "Families and corresponding versions used in this workspace.\
            \ \nThis property is a object whose keys are family names and values are\
            \ integers."
          type: object
        creation_date:
          format: date-time
          description: Date when the workspace was created
          type: string
        temporary:
          description: "Whether this workspace is temporary or not. Temporary workspaces\
            \ are \nautomatically deleted after some time."
          type: boolean
        owner:
          description: User who owns this workpace
          type: string
        data_url:
          description: URL of a remote storage location for files used in this workspace
          type: string
          nullable: true
        name:
          description: Name of the workspace
          type: string
      example: |-
        {
            "id": 1,
            "status": "ready",
            "description": "Details on what this workspace is for",
            "families": {},
            "creation_date": "2019-28-02T12:23:55",
            "temporary": false,
            "owner": "username",
            "data_url": "gs://some_bucket_name"
        }
