# Documentation of these yaml, their schema and what everything means is
# available on https://kubernetes.io/docs/reference/
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  labels:
    name: db
    app: quetzal
spec:
  replicas: 1
  selector:
    matchLabels:
      name: db
      app: quetzal
  template:
    metadata:
      labels:
        name: db
        app: quetzal
    spec:
      containers:
        - name: db
          image: gcr.io/quetzal/quetzal/db:0.2.0
          imagePullPolicy: Always
          ports:
            - containerPort: 5432
          resources:
            requests:
              memory: "128Mi"
              cpu: "250m"
            limits:
              memory: "4Gi"
              cpu: "1000m"
          volumeMounts:
            - mountPath: /srv/data
              name: db-data-volume
          env:
            # for the database contents, as documented in the postgres:latest
            # Dockerfile configuration in hub.docker.com, it is recommended to
            # change the PGDATA to a subdirectory. I tried not using a
            # subdirectory before (/var/lib/postgresql/data or
            # /var/lib/postgresql/data/pgdata). The first case doesn't work
            # because there is a volume in the Dockerfile which creates a silent
            # conflict and then the persistent data is lost. The second case
            # doesn't work because postgres complains that this is a mount
            # point.
            - name: PGDATA
              value: /srv/data/pgdata
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: stage-db-secrets
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: stage-db-secrets
                  key: password
      restartPolicy: Always
      volumes:
        - name: db-data-volume
          persistentVolumeClaim:
            claimName: db-pvc
