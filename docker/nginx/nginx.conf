server {
    listen 80 default_server;
    # We don't have a hostname yet, so use listen 80 default_server; instead of:
    # listen 80;
    # server_name some_name.example.com;
    charset utf-8;

    # location /nginx-health {
    #    return 200 "healthy\n";
    # }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 default_server ssl;
    # We don't have a hostname yet, so use listen 443 default_server; instead of:
    # listen 443 ssl;
    # server_name some_name.example.com;

    # logs
    access_log /var/log/access.log;
    error_log /var/log/error.log;

    # ssl on;
    ssl_certificate ssl/mysite.crt;
    ssl_certificate_key ssl/mysite.key;
    ssl_dhparam ssl/dhparam.pem;

    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:!DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # location /nginx-health {
    #    return 200 "healthy\n";
    # }

    location / {
        # Redefine the header fields that NGINX sends to the upstream server
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Scheme $scheme;
        # X-Forwarded-Server may be useful if used with the HttpPostHeaderMiddleware
        #proxy_set_header X-Forwarded-Server $proxy_host;

        # Define the location of the proxy server to send the request to
        proxy_pass       http://web:5000;
    }
}
